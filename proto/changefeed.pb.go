// Copyright 2025 The Cockroach Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/changefeed.proto

package changefeedpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Op enumerates the types of operations represented in a change event.
type Op int32

const (
	Op_OP_UNSPECIFIED Op = 0
	Op_OP_CREATE      Op = 1
	Op_OP_UPDATE      Op = 2
	Op_OP_DELETE      Op = 3
)

// Enum value maps for Op.
var (
	Op_name = map[int32]string{
		0: "OP_UNSPECIFIED",
		1: "OP_CREATE",
		2: "OP_UPDATE",
		3: "OP_DELETE",
	}
	Op_value = map[string]int32{
		"OP_UNSPECIFIED": 0,
		"OP_CREATE":      1,
		"OP_UPDATE":      2,
		"OP_DELETE":      3,
	}
)

func (x Op) Enum() *Op {
	p := new(Op)
	*p = x
	return p
}

func (x Op) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Op) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_changefeed_proto_enumTypes[0].Descriptor()
}

func (Op) Type() protoreflect.EnumType {
	return &file_proto_changefeed_proto_enumTypes[0]
}

func (x Op) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Op.Descriptor instead.
func (Op) EnumDescriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{0}
}

// MessageBatch is a batch of messages for use in webhook sinks.
type MessageBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       []*Message             `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageBatch) Reset() {
	*x = MessageBatch{}
	mi := &file_proto_changefeed_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageBatch) ProtoMessage() {}

func (x *MessageBatch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageBatch.ProtoReflect.Descriptor instead.
func (*MessageBatch) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{0}
}

func (x *MessageBatch) GetPayload() []*Message {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Message is an enum of the different envelope types. This is what will be emitted to the client.
type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*Message_Wrapped
	//	*Message_Bare
	//	*Message_Enriched
	//	*Message_Resolved
	//	*Message_BareResolved
	Data          isMessage_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_proto_changefeed_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetData() isMessage_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Message) GetWrapped() *WrappedEnvelope {
	if x != nil {
		if x, ok := x.Data.(*Message_Wrapped); ok {
			return x.Wrapped
		}
	}
	return nil
}

func (x *Message) GetBare() *BareEnvelope {
	if x != nil {
		if x, ok := x.Data.(*Message_Bare); ok {
			return x.Bare
		}
	}
	return nil
}

func (x *Message) GetEnriched() *EnrichedEnvelope {
	if x != nil {
		if x, ok := x.Data.(*Message_Enriched); ok {
			return x.Enriched
		}
	}
	return nil
}

func (x *Message) GetResolved() *Resolved {
	if x != nil {
		if x, ok := x.Data.(*Message_Resolved); ok {
			return x.Resolved
		}
	}
	return nil
}

func (x *Message) GetBareResolved() *BareResolved {
	if x != nil {
		if x, ok := x.Data.(*Message_BareResolved); ok {
			return x.BareResolved
		}
	}
	return nil
}

type isMessage_Data interface {
	isMessage_Data()
}

type Message_Wrapped struct {
	// wrapped is a Message in WrappedEnvelope format.
	Wrapped *WrappedEnvelope `protobuf:"bytes,1,opt,name=wrapped,proto3,oneof"`
}

type Message_Bare struct {
	// bare is a Message in BareEnvelope format.
	Bare *BareEnvelope `protobuf:"bytes,2,opt,name=bare,proto3,oneof"`
}

type Message_Enriched struct {
	// enriched is a Message in EnrichedEnvelope format.
	Enriched *EnrichedEnvelope `protobuf:"bytes,3,opt,name=enriched,proto3,oneof"`
}

type Message_Resolved struct {
	// resolved is a Message in Resolved format for Resolved Timestamps.
	Resolved *Resolved `protobuf:"bytes,4,opt,name=resolved,proto3,oneof"`
}

type Message_BareResolved struct {
	// bareResolved wraps a resolved envelope inside a BareResolved format for Resolved Timestamps in Bare envelopes.
	BareResolved *BareResolved `protobuf:"bytes,5,opt,name=bareResolved,proto3,oneof"`
}

func (*Message_Wrapped) isMessage_Data() {}

func (*Message_Bare) isMessage_Data() {}

func (*Message_Enriched) isMessage_Data() {}

func (*Message_Resolved) isMessage_Data() {}

func (*Message_BareResolved) isMessage_Data() {}

// WrappedEnvelope includes both the changed data and contextual metadata about the change.
type WrappedEnvelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	After         *Record                `protobuf:"bytes,1,opt,name=after,proto3" json:"after,omitempty"`
	Before        *Record                `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	Updated       string                 `protobuf:"bytes,4,opt,name=updated,proto3" json:"updated,omitempty"`
	MvccTimestamp string                 `protobuf:"bytes,5,opt,name=mvcc_timestamp,json=mvccTimestamp,proto3" json:"mvcc_timestamp,omitempty"`
	Key           *Key                   `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	Topic         string                 `protobuf:"bytes,7,opt,name=topic,proto3" json:"topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WrappedEnvelope) Reset() {
	*x = WrappedEnvelope{}
	mi := &file_proto_changefeed_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WrappedEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WrappedEnvelope) ProtoMessage() {}

func (x *WrappedEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WrappedEnvelope.ProtoReflect.Descriptor instead.
func (*WrappedEnvelope) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{2}
}

func (x *WrappedEnvelope) GetAfter() *Record {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *WrappedEnvelope) GetBefore() *Record {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *WrappedEnvelope) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *WrappedEnvelope) GetMvccTimestamp() string {
	if x != nil {
		return x.MvccTimestamp
	}
	return ""
}

func (x *WrappedEnvelope) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *WrappedEnvelope) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

// BareEnvelope contains change data as a flat map along with
// CockroachDB-specific metadata under the '__crdb__' field.
type BareEnvelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        map[string]*Value      `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XCrdb__       *Metadata              `protobuf:"bytes,2,opt,name=__crdb__,json=Crdb,proto3" json:"__crdb__,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BareEnvelope) Reset() {
	*x = BareEnvelope{}
	mi := &file_proto_changefeed_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BareEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BareEnvelope) ProtoMessage() {}

func (x *BareEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BareEnvelope.ProtoReflect.Descriptor instead.
func (*BareEnvelope) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{3}
}

func (x *BareEnvelope) GetValues() map[string]*Value {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *BareEnvelope) GetXCrdb__() *Metadata {
	if x != nil {
		return x.XCrdb__
	}
	return nil
}

// BareResolved is a minimal envelope that wraps a resolved timestamp in a '__crdb__' field.
type BareResolved struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XCrdb__       *Resolved              `protobuf:"bytes,1,opt,name=__crdb__,json=Crdb,proto3" json:"__crdb__,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BareResolved) Reset() {
	*x = BareResolved{}
	mi := &file_proto_changefeed_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BareResolved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BareResolved) ProtoMessage() {}

func (x *BareResolved) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BareResolved.ProtoReflect.Descriptor instead.
func (*BareResolved) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{4}
}

func (x *BareResolved) GetXCrdb__() *Resolved {
	if x != nil {
		return x.XCrdb__
	}
	return nil
}

// EnrichedEnvelope includes detailed context about the change event and source.
type EnrichedEnvelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	After         *Record                `protobuf:"bytes,1,opt,name=after,proto3" json:"after,omitempty"`
	Before        *Record                `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	Op            Op                     `protobuf:"varint,3,opt,name=op,proto3,enum=changefeedpb.Op" json:"op,omitempty"`
	Key           *Key                   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	TsNs          int64                  `protobuf:"varint,5,opt,name=ts_ns,json=tsNs,proto3" json:"ts_ns,omitempty"`
	Source        *EnrichedSource        `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnrichedEnvelope) Reset() {
	*x = EnrichedEnvelope{}
	mi := &file_proto_changefeed_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnrichedEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrichedEnvelope) ProtoMessage() {}

func (x *EnrichedEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrichedEnvelope.ProtoReflect.Descriptor instead.
func (*EnrichedEnvelope) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{5}
}

func (x *EnrichedEnvelope) GetAfter() *Record {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *EnrichedEnvelope) GetBefore() *Record {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *EnrichedEnvelope) GetOp() Op {
	if x != nil {
		return x.Op
	}
	return Op_OP_UNSPECIFIED
}

func (x *EnrichedEnvelope) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *EnrichedEnvelope) GetTsNs() int64 {
	if x != nil {
		return x.TsNs
	}
	return 0
}

func (x *EnrichedEnvelope) GetSource() *EnrichedSource {
	if x != nil {
		return x.Source
	}
	return nil
}

// Resolved carries resolved timestamp information for a changefeed span.
type Resolved struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resolved      string                 `protobuf:"bytes,1,opt,name=resolved,proto3" json:"resolved,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resolved) Reset() {
	*x = Resolved{}
	mi := &file_proto_changefeed_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resolved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resolved) ProtoMessage() {}

func (x *Resolved) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resolved.ProtoReflect.Descriptor instead.
func (*Resolved) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{6}
}

func (x *Resolved) GetResolved() string {
	if x != nil {
		return x.Resolved
	}
	return ""
}

// EnrichedSource records information about the origin and context
// of a change event, for operational traceability.
type EnrichedSource struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	JobId              string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	ChangefeedSink     string                 `protobuf:"bytes,2,opt,name=changefeed_sink,json=changefeedSink,proto3" json:"changefeed_sink,omitempty"`
	DbVersion          string                 `protobuf:"bytes,3,opt,name=db_version,json=dbVersion,proto3" json:"db_version,omitempty"`
	ClusterName        string                 `protobuf:"bytes,4,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	ClusterId          string                 `protobuf:"bytes,5,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	SourceNodeLocality string                 `protobuf:"bytes,6,opt,name=source_node_locality,json=sourceNodeLocality,proto3" json:"source_node_locality,omitempty"`
	NodeName           string                 `protobuf:"bytes,7,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	NodeId             string                 `protobuf:"bytes,8,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	MvccTimestamp      string                 `protobuf:"bytes,9,opt,name=mvcc_timestamp,json=mvccTimestamp,proto3" json:"mvcc_timestamp,omitempty"`
	TsNs               int64                  `protobuf:"varint,10,opt,name=ts_ns,json=tsNs,proto3" json:"ts_ns,omitempty"`
	TsHlc              string                 `protobuf:"bytes,11,opt,name=ts_hlc,json=tsHlc,proto3" json:"ts_hlc,omitempty"`
	Origin             string                 `protobuf:"bytes,12,opt,name=origin,proto3" json:"origin,omitempty"`
	DatabaseName       string                 `protobuf:"bytes,13,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	SchemaName         string                 `protobuf:"bytes,14,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	TableName          string                 `protobuf:"bytes,15,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	PrimaryKeys        []string               `protobuf:"bytes,16,rep,name=primary_keys,json=primaryKeys,proto3" json:"primary_keys,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *EnrichedSource) Reset() {
	*x = EnrichedSource{}
	mi := &file_proto_changefeed_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnrichedSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrichedSource) ProtoMessage() {}

func (x *EnrichedSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrichedSource.ProtoReflect.Descriptor instead.
func (*EnrichedSource) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{7}
}

func (x *EnrichedSource) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *EnrichedSource) GetChangefeedSink() string {
	if x != nil {
		return x.ChangefeedSink
	}
	return ""
}

func (x *EnrichedSource) GetDbVersion() string {
	if x != nil {
		return x.DbVersion
	}
	return ""
}

func (x *EnrichedSource) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *EnrichedSource) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *EnrichedSource) GetSourceNodeLocality() string {
	if x != nil {
		return x.SourceNodeLocality
	}
	return ""
}

func (x *EnrichedSource) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *EnrichedSource) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *EnrichedSource) GetMvccTimestamp() string {
	if x != nil {
		return x.MvccTimestamp
	}
	return ""
}

func (x *EnrichedSource) GetTsNs() int64 {
	if x != nil {
		return x.TsNs
	}
	return 0
}

func (x *EnrichedSource) GetTsHlc() string {
	if x != nil {
		return x.TsHlc
	}
	return ""
}

func (x *EnrichedSource) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *EnrichedSource) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *EnrichedSource) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *EnrichedSource) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *EnrichedSource) GetPrimaryKeys() []string {
	if x != nil {
		return x.PrimaryKeys
	}
	return nil
}

// Metadata contains CockroachDB-specific metadata about a change event.
// This message is also referred to as '__crdb__'.
type Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Updated       string                 `protobuf:"bytes,1,opt,name=updated,proto3" json:"updated,omitempty"`
	MvccTimestamp string                 `protobuf:"bytes,2,opt,name=mvcc_timestamp,json=mvccTimestamp,proto3" json:"mvcc_timestamp,omitempty"`
	Key           *Key                   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Topic         string                 `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_proto_changefeed_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{8}
}

func (x *Metadata) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *Metadata) GetMvccTimestamp() string {
	if x != nil {
		return x.MvccTimestamp
	}
	return ""
}

func (x *Metadata) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Metadata) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

// Value represents a value of arbitrary type carried in a change event.
type Value struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*Value_StringValue
	//	*Value_BytesValue
	//	*Value_Int32Value
	//	*Value_Int64Value
	//	*Value_FloatValue
	//	*Value_DoubleValue
	//	*Value_BoolValue
	//	*Value_TimestampValue
	//	*Value_ArrayValue
	//	*Value_TupleValue
	//	*Value_DecimalValue
	//	*Value_DateValue
	//	*Value_IntervalValue
	//	*Value_TimeValue
	//	*Value_UuidValue
	Value         isValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Value) Reset() {
	*x = Value{}
	mi := &file_proto_changefeed_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{9}
}

func (x *Value) GetValue() isValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Value) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*Value_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *Value) GetBytesValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*Value_BytesValue); ok {
			return x.BytesValue
		}
	}
	return nil
}

func (x *Value) GetInt32Value() int32 {
	if x != nil {
		if x, ok := x.Value.(*Value_Int32Value); ok {
			return x.Int32Value
		}
	}
	return 0
}

func (x *Value) GetInt64Value() int64 {
	if x != nil {
		if x, ok := x.Value.(*Value_Int64Value); ok {
			return x.Int64Value
		}
	}
	return 0
}

func (x *Value) GetFloatValue() float32 {
	if x != nil {
		if x, ok := x.Value.(*Value_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

func (x *Value) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*Value_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *Value) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*Value_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *Value) GetTimestampValue() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Value.(*Value_TimestampValue); ok {
			return x.TimestampValue
		}
	}
	return nil
}

func (x *Value) GetArrayValue() *Array {
	if x != nil {
		if x, ok := x.Value.(*Value_ArrayValue); ok {
			return x.ArrayValue
		}
	}
	return nil
}

func (x *Value) GetTupleValue() *Record {
	if x != nil {
		if x, ok := x.Value.(*Value_TupleValue); ok {
			return x.TupleValue
		}
	}
	return nil
}

func (x *Value) GetDecimalValue() *Decimal {
	if x != nil {
		if x, ok := x.Value.(*Value_DecimalValue); ok {
			return x.DecimalValue
		}
	}
	return nil
}

func (x *Value) GetDateValue() string {
	if x != nil {
		if x, ok := x.Value.(*Value_DateValue); ok {
			return x.DateValue
		}
	}
	return ""
}

func (x *Value) GetIntervalValue() string {
	if x != nil {
		if x, ok := x.Value.(*Value_IntervalValue); ok {
			return x.IntervalValue
		}
	}
	return ""
}

func (x *Value) GetTimeValue() string {
	if x != nil {
		if x, ok := x.Value.(*Value_TimeValue); ok {
			return x.TimeValue
		}
	}
	return ""
}

func (x *Value) GetUuidValue() string {
	if x != nil {
		if x, ok := x.Value.(*Value_UuidValue); ok {
			return x.UuidValue
		}
	}
	return ""
}

type isValue_Value interface {
	isValue_Value()
}

type Value_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Value_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,2,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type Value_Int32Value struct {
	Int32Value int32 `protobuf:"varint,3,opt,name=int32_value,json=int32Value,proto3,oneof"`
}

type Value_Int64Value struct {
	Int64Value int64 `protobuf:"varint,4,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type Value_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,5,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type Value_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,6,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,7,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Value_TimestampValue struct {
	TimestampValue *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=timestamp_value,json=timestampValue,proto3,oneof"`
}

type Value_ArrayValue struct {
	ArrayValue *Array `protobuf:"bytes,9,opt,name=array_value,json=arrayValue,proto3,oneof"`
}

type Value_TupleValue struct {
	TupleValue *Record `protobuf:"bytes,10,opt,name=tuple_value,json=tupleValue,proto3,oneof"`
}

type Value_DecimalValue struct {
	DecimalValue *Decimal `protobuf:"bytes,11,opt,name=decimal_value,json=decimalValue,proto3,oneof"`
}

type Value_DateValue struct {
	DateValue string `protobuf:"bytes,12,opt,name=date_value,json=dateValue,proto3,oneof"`
}

type Value_IntervalValue struct {
	IntervalValue string `protobuf:"bytes,13,opt,name=interval_value,json=intervalValue,proto3,oneof"`
}

type Value_TimeValue struct {
	TimeValue string `protobuf:"bytes,14,opt,name=time_value,json=timeValue,proto3,oneof"`
}

type Value_UuidValue struct {
	UuidValue string `protobuf:"bytes,15,opt,name=uuid_value,json=uuidValue,proto3,oneof"`
}

func (*Value_StringValue) isValue_Value() {}

func (*Value_BytesValue) isValue_Value() {}

func (*Value_Int32Value) isValue_Value() {}

func (*Value_Int64Value) isValue_Value() {}

func (*Value_FloatValue) isValue_Value() {}

func (*Value_DoubleValue) isValue_Value() {}

func (*Value_BoolValue) isValue_Value() {}

func (*Value_TimestampValue) isValue_Value() {}

func (*Value_ArrayValue) isValue_Value() {}

func (*Value_TupleValue) isValue_Value() {}

func (*Value_DecimalValue) isValue_Value() {}

func (*Value_DateValue) isValue_Value() {}

func (*Value_IntervalValue) isValue_Value() {}

func (*Value_TimeValue) isValue_Value() {}

func (*Value_UuidValue) isValue_Value() {}

// Key contains the primary key values for a row.
type Key struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           map[string]*Value      `protobuf:"bytes,1,rep,name=key,proto3" json:"key,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Key) Reset() {
	*x = Key{}
	mi := &file_proto_changefeed_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{10}
}

func (x *Key) GetKey() map[string]*Value {
	if x != nil {
		return x.Key
	}
	return nil
}

// Array represents an ordered list of values.
type Array struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []*Value               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Array) Reset() {
	*x = Array{}
	mi := &file_proto_changefeed_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Array) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Array) ProtoMessage() {}

func (x *Array) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Array.ProtoReflect.Descriptor instead.
func (*Array) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{11}
}

func (x *Array) GetValues() []*Value {
	if x != nil {
		return x.Values
	}
	return nil
}

// Decimal contains a fixed-point decimal value represented as a string.
type Decimal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Decimal) Reset() {
	*x = Decimal{}
	mi := &file_proto_changefeed_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Decimal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decimal) ProtoMessage() {}

func (x *Decimal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decimal.ProtoReflect.Descriptor instead.
func (*Decimal) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{12}
}

func (x *Decimal) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Record represents a flat mapping of column names to values for a row.
type Record struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        map[string]*Value      `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Record) Reset() {
	*x = Record{}
	mi := &file_proto_changefeed_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_proto_changefeed_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_proto_changefeed_proto_rawDescGZIP(), []int{13}
}

func (x *Record) GetValues() map[string]*Value {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_proto_changefeed_proto protoreflect.FileDescriptor

const file_proto_changefeed_proto_rawDesc = "" +
	"\n" +
	"\x16proto/changefeed.proto\x12\fchangefeedpb\x1a\x1fgoogle/protobuf/timestamp.proto\"?\n" +
	"\fMessageBatch\x12/\n" +
	"\apayload\x18\x01 \x03(\v2\x15.changefeedpb.MessageR\apayload\"\xb4\x02\n" +
	"\aMessage\x129\n" +
	"\awrapped\x18\x01 \x01(\v2\x1d.changefeedpb.WrappedEnvelopeH\x00R\awrapped\x120\n" +
	"\x04bare\x18\x02 \x01(\v2\x1a.changefeedpb.BareEnvelopeH\x00R\x04bare\x12<\n" +
	"\benriched\x18\x03 \x01(\v2\x1e.changefeedpb.EnrichedEnvelopeH\x00R\benriched\x124\n" +
	"\bresolved\x18\x04 \x01(\v2\x16.changefeedpb.ResolvedH\x00R\bresolved\x12@\n" +
	"\fbareResolved\x18\x05 \x01(\v2\x1a.changefeedpb.BareResolvedH\x00R\fbareResolvedB\x06\n" +
	"\x04data\"\xe7\x01\n" +
	"\x0fWrappedEnvelope\x12*\n" +
	"\x05after\x18\x01 \x01(\v2\x14.changefeedpb.RecordR\x05after\x12,\n" +
	"\x06before\x18\x02 \x01(\v2\x14.changefeedpb.RecordR\x06before\x12\x18\n" +
	"\aupdated\x18\x04 \x01(\tR\aupdated\x12%\n" +
	"\x0emvcc_timestamp\x18\x05 \x01(\tR\rmvccTimestamp\x12#\n" +
	"\x03key\x18\x06 \x01(\v2\x11.changefeedpb.KeyR\x03key\x12\x14\n" +
	"\x05topic\x18\a \x01(\tR\x05topic\"\xce\x01\n" +
	"\fBareEnvelope\x12>\n" +
	"\x06values\x18\x01 \x03(\v2&.changefeedpb.BareEnvelope.ValuesEntryR\x06values\x12.\n" +
	"\b__crdb__\x18\x02 \x01(\v2\x16.changefeedpb.MetadataR\x04Crdb\x1aN\n" +
	"\vValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12)\n" +
	"\x05value\x18\x02 \x01(\v2\x13.changefeedpb.ValueR\x05value:\x028\x01\">\n" +
	"\fBareResolved\x12.\n" +
	"\b__crdb__\x18\x01 \x01(\v2\x16.changefeedpb.ResolvedR\x04Crdb\"\xfe\x01\n" +
	"\x10EnrichedEnvelope\x12*\n" +
	"\x05after\x18\x01 \x01(\v2\x14.changefeedpb.RecordR\x05after\x12,\n" +
	"\x06before\x18\x02 \x01(\v2\x14.changefeedpb.RecordR\x06before\x12 \n" +
	"\x02op\x18\x03 \x01(\x0e2\x10.changefeedpb.OpR\x02op\x12#\n" +
	"\x03key\x18\x04 \x01(\v2\x11.changefeedpb.KeyR\x03key\x12\x13\n" +
	"\x05ts_ns\x18\x05 \x01(\x03R\x04tsNs\x124\n" +
	"\x06source\x18\x06 \x01(\v2\x1c.changefeedpb.EnrichedSourceR\x06source\"&\n" +
	"\bResolved\x12\x1a\n" +
	"\bresolved\x18\x01 \x01(\tR\bresolved\"\x8c\x04\n" +
	"\x0eEnrichedSource\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12'\n" +
	"\x0fchangefeed_sink\x18\x02 \x01(\tR\x0echangefeedSink\x12\x1d\n" +
	"\n" +
	"db_version\x18\x03 \x01(\tR\tdbVersion\x12!\n" +
	"\fcluster_name\x18\x04 \x01(\tR\vclusterName\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x05 \x01(\tR\tclusterId\x120\n" +
	"\x14source_node_locality\x18\x06 \x01(\tR\x12sourceNodeLocality\x12\x1b\n" +
	"\tnode_name\x18\a \x01(\tR\bnodeName\x12\x17\n" +
	"\anode_id\x18\b \x01(\tR\x06nodeId\x12%\n" +
	"\x0emvcc_timestamp\x18\t \x01(\tR\rmvccTimestamp\x12\x13\n" +
	"\x05ts_ns\x18\n" +
	" \x01(\x03R\x04tsNs\x12\x15\n" +
	"\x06ts_hlc\x18\v \x01(\tR\x05tsHlc\x12\x16\n" +
	"\x06origin\x18\f \x01(\tR\x06origin\x12#\n" +
	"\rdatabase_name\x18\r \x01(\tR\fdatabaseName\x12\x1f\n" +
	"\vschema_name\x18\x0e \x01(\tR\n" +
	"schemaName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x0f \x01(\tR\ttableName\x12!\n" +
	"\fprimary_keys\x18\x10 \x03(\tR\vprimaryKeys\"\x86\x01\n" +
	"\bMetadata\x12\x18\n" +
	"\aupdated\x18\x01 \x01(\tR\aupdated\x12%\n" +
	"\x0emvcc_timestamp\x18\x02 \x01(\tR\rmvccTimestamp\x12#\n" +
	"\x03key\x18\x03 \x01(\v2\x11.changefeedpb.KeyR\x03key\x12\x14\n" +
	"\x05topic\x18\x04 \x01(\tR\x05topic\"\x89\x05\n" +
	"\x05Value\x12#\n" +
	"\fstring_value\x18\x01 \x01(\tH\x00R\vstringValue\x12!\n" +
	"\vbytes_value\x18\x02 \x01(\fH\x00R\n" +
	"bytesValue\x12!\n" +
	"\vint32_value\x18\x03 \x01(\x05H\x00R\n" +
	"int32Value\x12!\n" +
	"\vint64_value\x18\x04 \x01(\x03H\x00R\n" +
	"int64Value\x12!\n" +
	"\vfloat_value\x18\x05 \x01(\x02H\x00R\n" +
	"floatValue\x12#\n" +
	"\fdouble_value\x18\x06 \x01(\x01H\x00R\vdoubleValue\x12\x1f\n" +
	"\n" +
	"bool_value\x18\a \x01(\bH\x00R\tboolValue\x12E\n" +
	"\x0ftimestamp_value\x18\b \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x0etimestampValue\x126\n" +
	"\varray_value\x18\t \x01(\v2\x13.changefeedpb.ArrayH\x00R\n" +
	"arrayValue\x127\n" +
	"\vtuple_value\x18\n" +
	" \x01(\v2\x14.changefeedpb.RecordH\x00R\n" +
	"tupleValue\x12<\n" +
	"\rdecimal_value\x18\v \x01(\v2\x15.changefeedpb.DecimalH\x00R\fdecimalValue\x12\x1f\n" +
	"\n" +
	"date_value\x18\f \x01(\tH\x00R\tdateValue\x12'\n" +
	"\x0einterval_value\x18\r \x01(\tH\x00R\rintervalValue\x12\x1f\n" +
	"\n" +
	"time_value\x18\x0e \x01(\tH\x00R\ttimeValue\x12\x1f\n" +
	"\n" +
	"uuid_value\x18\x0f \x01(\tH\x00R\tuuidValueB\a\n" +
	"\x05value\"\x80\x01\n" +
	"\x03Key\x12,\n" +
	"\x03key\x18\x01 \x03(\v2\x1a.changefeedpb.Key.KeyEntryR\x03key\x1aK\n" +
	"\bKeyEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12)\n" +
	"\x05value\x18\x02 \x01(\v2\x13.changefeedpb.ValueR\x05value:\x028\x01\"4\n" +
	"\x05Array\x12+\n" +
	"\x06values\x18\x01 \x03(\v2\x13.changefeedpb.ValueR\x06values\"\x1f\n" +
	"\aDecimal\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\x92\x01\n" +
	"\x06Record\x128\n" +
	"\x06values\x18\x01 \x03(\v2 .changefeedpb.Record.ValuesEntryR\x06values\x1aN\n" +
	"\vValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12)\n" +
	"\x05value\x18\x02 \x01(\v2\x13.changefeedpb.ValueR\x05value:\x028\x01*E\n" +
	"\x02Op\x12\x12\n" +
	"\x0eOP_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tOP_CREATE\x10\x01\x12\r\n" +
	"\tOP_UPDATE\x10\x02\x12\r\n" +
	"\tOP_DELETE\x10\x03B8Z6github.com/cockroachdb/changefeedpb/proto;changefeedpbb\x06proto3"

var (
	file_proto_changefeed_proto_rawDescOnce sync.Once
	file_proto_changefeed_proto_rawDescData []byte
)

func file_proto_changefeed_proto_rawDescGZIP() []byte {
	file_proto_changefeed_proto_rawDescOnce.Do(func() {
		file_proto_changefeed_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_changefeed_proto_rawDesc), len(file_proto_changefeed_proto_rawDesc)))
	})
	return file_proto_changefeed_proto_rawDescData
}

var file_proto_changefeed_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_changefeed_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_changefeed_proto_goTypes = []any{
	(Op)(0),                       // 0: changefeedpb.Op
	(*MessageBatch)(nil),          // 1: changefeedpb.MessageBatch
	(*Message)(nil),               // 2: changefeedpb.Message
	(*WrappedEnvelope)(nil),       // 3: changefeedpb.WrappedEnvelope
	(*BareEnvelope)(nil),          // 4: changefeedpb.BareEnvelope
	(*BareResolved)(nil),          // 5: changefeedpb.BareResolved
	(*EnrichedEnvelope)(nil),      // 6: changefeedpb.EnrichedEnvelope
	(*Resolved)(nil),              // 7: changefeedpb.Resolved
	(*EnrichedSource)(nil),        // 8: changefeedpb.EnrichedSource
	(*Metadata)(nil),              // 9: changefeedpb.Metadata
	(*Value)(nil),                 // 10: changefeedpb.Value
	(*Key)(nil),                   // 11: changefeedpb.Key
	(*Array)(nil),                 // 12: changefeedpb.Array
	(*Decimal)(nil),               // 13: changefeedpb.Decimal
	(*Record)(nil),                // 14: changefeedpb.Record
	nil,                           // 15: changefeedpb.BareEnvelope.ValuesEntry
	nil,                           // 16: changefeedpb.Key.KeyEntry
	nil,                           // 17: changefeedpb.Record.ValuesEntry
	(*timestamppb.Timestamp)(nil), // 18: google.protobuf.Timestamp
}
var file_proto_changefeed_proto_depIdxs = []int32{
	2,  // 0: changefeedpb.MessageBatch.payload:type_name -> changefeedpb.Message
	3,  // 1: changefeedpb.Message.wrapped:type_name -> changefeedpb.WrappedEnvelope
	4,  // 2: changefeedpb.Message.bare:type_name -> changefeedpb.BareEnvelope
	6,  // 3: changefeedpb.Message.enriched:type_name -> changefeedpb.EnrichedEnvelope
	7,  // 4: changefeedpb.Message.resolved:type_name -> changefeedpb.Resolved
	5,  // 5: changefeedpb.Message.bareResolved:type_name -> changefeedpb.BareResolved
	14, // 6: changefeedpb.WrappedEnvelope.after:type_name -> changefeedpb.Record
	14, // 7: changefeedpb.WrappedEnvelope.before:type_name -> changefeedpb.Record
	11, // 8: changefeedpb.WrappedEnvelope.key:type_name -> changefeedpb.Key
	15, // 9: changefeedpb.BareEnvelope.values:type_name -> changefeedpb.BareEnvelope.ValuesEntry
	9,  // 10: changefeedpb.BareEnvelope.__crdb__:type_name -> changefeedpb.Metadata
	7,  // 11: changefeedpb.BareResolved.__crdb__:type_name -> changefeedpb.Resolved
	14, // 12: changefeedpb.EnrichedEnvelope.after:type_name -> changefeedpb.Record
	14, // 13: changefeedpb.EnrichedEnvelope.before:type_name -> changefeedpb.Record
	0,  // 14: changefeedpb.EnrichedEnvelope.op:type_name -> changefeedpb.Op
	11, // 15: changefeedpb.EnrichedEnvelope.key:type_name -> changefeedpb.Key
	8,  // 16: changefeedpb.EnrichedEnvelope.source:type_name -> changefeedpb.EnrichedSource
	11, // 17: changefeedpb.Metadata.key:type_name -> changefeedpb.Key
	18, // 18: changefeedpb.Value.timestamp_value:type_name -> google.protobuf.Timestamp
	12, // 19: changefeedpb.Value.array_value:type_name -> changefeedpb.Array
	14, // 20: changefeedpb.Value.tuple_value:type_name -> changefeedpb.Record
	13, // 21: changefeedpb.Value.decimal_value:type_name -> changefeedpb.Decimal
	16, // 22: changefeedpb.Key.key:type_name -> changefeedpb.Key.KeyEntry
	10, // 23: changefeedpb.Array.values:type_name -> changefeedpb.Value
	17, // 24: changefeedpb.Record.values:type_name -> changefeedpb.Record.ValuesEntry
	10, // 25: changefeedpb.BareEnvelope.ValuesEntry.value:type_name -> changefeedpb.Value
	10, // 26: changefeedpb.Key.KeyEntry.value:type_name -> changefeedpb.Value
	10, // 27: changefeedpb.Record.ValuesEntry.value:type_name -> changefeedpb.Value
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_proto_changefeed_proto_init() }
func file_proto_changefeed_proto_init() {
	if File_proto_changefeed_proto != nil {
		return
	}
	file_proto_changefeed_proto_msgTypes[1].OneofWrappers = []any{
		(*Message_Wrapped)(nil),
		(*Message_Bare)(nil),
		(*Message_Enriched)(nil),
		(*Message_Resolved)(nil),
		(*Message_BareResolved)(nil),
	}
	file_proto_changefeed_proto_msgTypes[9].OneofWrappers = []any{
		(*Value_StringValue)(nil),
		(*Value_BytesValue)(nil),
		(*Value_Int32Value)(nil),
		(*Value_Int64Value)(nil),
		(*Value_FloatValue)(nil),
		(*Value_DoubleValue)(nil),
		(*Value_BoolValue)(nil),
		(*Value_TimestampValue)(nil),
		(*Value_ArrayValue)(nil),
		(*Value_TupleValue)(nil),
		(*Value_DecimalValue)(nil),
		(*Value_DateValue)(nil),
		(*Value_IntervalValue)(nil),
		(*Value_TimeValue)(nil),
		(*Value_UuidValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_changefeed_proto_rawDesc), len(file_proto_changefeed_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_changefeed_proto_goTypes,
		DependencyIndexes: file_proto_changefeed_proto_depIdxs,
		EnumInfos:         file_proto_changefeed_proto_enumTypes,
		MessageInfos:      file_proto_changefeed_proto_msgTypes,
	}.Build()
	File_proto_changefeed_proto = out.File
	file_proto_changefeed_proto_goTypes = nil
	file_proto_changefeed_proto_depIdxs = nil
}
